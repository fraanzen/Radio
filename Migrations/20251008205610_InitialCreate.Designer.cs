// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Radio.Data;

#nullable disable

namespace Radio.Migrations
{
    [DbContext(typeof(RadioDbContext))]
    [Migration("20251008205610_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Radio.Models.DailySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DailySchedules");
                });

            modelBuilder.Entity("Radio.Models.ScheduledContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DailyScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DailyScheduleId");

                    b.ToTable("ScheduledContents");

                    b.HasDiscriminator().HasValue("ScheduledContent");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Radio.Models.LiveSession", b =>
                {
                    b.HasBaseType("Radio.Models.ScheduledContent");

                    b.PrimitiveCollection<string>("Guests")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestsData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Hosts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HostsData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Studio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("LiveSession");
                });

            modelBuilder.Entity("Radio.Models.MusicContent", b =>
                {
                    b.HasBaseType("Radio.Models.ScheduledContent");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("MusicContent");
                });

            modelBuilder.Entity("Radio.Models.Reportage", b =>
                {
                    b.HasBaseType("Radio.Models.ScheduledContent");

                    b.Property<string>("Reporter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Reportage");
                });

            modelBuilder.Entity("Radio.Models.ScheduledContent", b =>
                {
                    b.HasOne("Radio.Models.DailySchedule", "DailySchedule")
                        .WithMany("Content")
                        .HasForeignKey("DailyScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DailySchedule");
                });

            modelBuilder.Entity("Radio.Models.DailySchedule", b =>
                {
                    b.Navigation("Content");
                });
#pragma warning restore 612, 618
        }
    }
}
